version: '3.8'

services:
  # 测试数据库
  postgres-test:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: tms_test
      POSTGRES_USER: testuser
      POSTGRES_PASSWORD: testpass
    ports:
      - "5433:5432"
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U testuser -d tms_test"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis缓存
  redis-test:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    volumes:
      - redis_test_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # API测试服务
  api-test:
    build:
      context: .
      dockerfile: Dockerfile.test
    environment:
      - NODE_ENV=test
      - DATABASE_URL=postgresql://testuser:testpass@postgres-test:5432/tms_test
      - REDIS_URL=redis://redis-test:6379
      - JWT_SECRET=test-jwt-secret
    depends_on:
      postgres-test:
        condition: service_healthy
      redis-test:
        condition: service_healthy
    volumes:
      - ./tests:/app/tests
      - ./coverage:/app/coverage
    command: npm run test:ci

  # 性能测试服务
  performance-test:
    build:
      context: .
      dockerfile: Dockerfile.test
    environment:
      - NODE_ENV=performance
      - DATABASE_URL=postgresql://testuser:testpass@postgres-test:5432/tms_test
      - TARGET_URL=http://api-test:3000/api
    depends_on:
      postgres-test:
        condition: service_healthy
      redis-test:
        condition: service_healthy
    volumes:
      - ./tests:/app/tests
    command: npm run test:performance

volumes:
  postgres_test_data:
  redis_test_data: